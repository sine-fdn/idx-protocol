<pre class='metadata'>
Title: IDX Protocol (Version 0.0.1-20250403)
Shortname: idx-protocol
Status: LD
Status Text: Draft Technical Specification
ED: https://sine-fdn.github.io/idx-protocol/
Canonical URL: ED
Editor: Martin Pomp√©ry, https://sine.foundation, martin@sine.foundation
Editor: Raimundo Henriques, https://sine.foundation, raimundo@sine.foundation
Repository: sine-fdn/idx-protocol
Abstract: This specification defines the IDX Protocol, a technical specification for reaching interoperability in the impact investments space.
Markup Shorthands: markdown yes
Boilerplate: omit conformance, omit copyright
Local Boilerplate: header yes
</pre>


Advisement: This technical specification is a living document and is work in progress.

# Introduction # {#introduction}

This document defines the IDX Protocol ([[#protocol]]) and a data model ([[#data-model]])
to enable the seamless and interoperable exchange ([[#business-cases]]) of opportunity data ([[#dt-opportunity]]).

It shall demonstrate that interoperability of impact investment data leads to more investments into SDG-related solutions.


## Out of Scope ## {#out-of-scope}

ISSUE: this section is still incomplete.

This specification does not cover the following topics:

1. KYC- or AML-related topics.
2. Legal or other regulatory aspects of impact investments.
3. The definition of the impact investment or the impact investments space.
4. Data provenance and data security aspects.


# Definitions # {#definitions}

: <dfn>Host System</dfn>
:: Software implementation conforming to this specifiction.

: <dfn>Data Owner</dfn>
:: A party that exchanges data with another party utilizing the IDX Protocol.

: <dfn>Data Recipient</dfn>
:: A party that receives or requests data from a [=data owner=] utilizing the IDX Protocol.

: <dfn>Party</dfn>
:: A [=data owner=] or a [=data recipient=].

: <dfn>Interoperable</dfn>
:: The quality of being able to exchange data between [=host systems=] irrespective of the vendors of the host systems, without the need for translation or transformation of the data.

: <dfn>OpenId Provider Configuration Document</dfn>
:: A `OpenId Provider Configuration Document` document provided in accordance with [[!OPENID-CONNECT]] Section 4.

: <dfn>AuthEndpoint</dfn>
:: The endpoint to request an [=access token=] after discovering the value through AuthEndpoint Discovery ([[#auth-discovery]]).


ISSUE: This sub-section to be completed.


# Business Case and Rational # {#business-cases}

Note: Non-normative section

The [[#protocol|IDX Protocol]] aims to serve impact investors and investees alike by increasing the efficiency of deal sourcing.
The IDX Protocol achieves this by enabling the exchange of investment opportunity data (see [[#txns]]).

The interoperability enabled by the IDX Protocol supports to

1. reduce the friction and cost of impact investment decision making for both investors and investees,
2. increase the number of investments in SDG-related solutions, and
3. increase transparency and accountability of impact investments.


# Data Transactions # {#txns}

Note: Non-normative section

A data transaction is an abstraction for the exchange of data ([[#data-model]]) between two [=parties=], serving one or more business cases ([[#business-cases]]).

Each transaction shall illustrate how the IDX Protocol can be utilized to address the described business cases.

## Data Transaction 1: Opportunity Data Exchange ## {#txn1}

This data transaction enables an investee (such as a farmer or a cooperative) as the [=data owner=] to make <{Opportunity}>
available to one or more investors or impact funds (the [=data recipient=](s)).

This data transaction also enables an investor or impact fund (the [=data owner=]) to share an
<{Opportunity}> with other investors or impact funds (the [=data recipient=](s)).

For this,

1. the data owner MUST gather the necessary data and input it into a [=host system=] that implements
    the IDX Protocol;
2. the host system MUST
    1. encode this data as an <{Opportunity}> and
    2. make it available through an HTTP API, as specified in [[#protocol]];
    3. provide the [=data recipient=](s) with the credentials necessary for authentication;
3. the data recipient MUST
    1. authenticate with the host system, by following the [=Authentication Flow=];
    2. call the [=Action OpportunityExchange=] to retrieve the <{Opportunity}> data;
    3. in case more than one <{Opportunity}> is returned, filter by, e.g., the name of the data
        owner.

# End-to-End Example # {#example}

ISSUE: Add an end-to-end example involving multiple parties


# Data Model # {#data-model}

The IDX Data Model consists of the data type <{Opportunity}> at this point.

## Opportunity ## {#dt-opportunity}

The <dfn element>Opportunity</dfn> data type contains information relating to a single investment opportunity.
This data type has OPTIONAL properties relating to impact investment opportunities.

[=Host systems=] make Opportunities available through the IDX Protocol ([[#protocol]]).


### Data Attributes ### {#sf-attributes}

The <{Opportunity}> data type has the following properties:

<figure id="opportunity-properties-table" dfn-type="element-attr" dfn-for="Opportunity">
  <table class="data">
    <thead>
      <tr>
        <th>Property
        <th>Type
        <th>Req
        <th>Specification
    <tbody>
      <tr>
        <td><dfn>id</dfn>
        <td>String
        <td>M
        <td>
              The unique identifier of the opportunity.

              It is RECOMMENDED to use UUID (version 4 or version 7 [[!rfc9562]]) as the value of this property.

      <tr>
        <td><dfn>previousIds</dfn>
        <td>String[]
        <td>O
        <td>
              The set (i.e. no duplicates) of unique identifiers of opportunities
              that are superseeded by this opportunity, encoded as an array of string values.

              See [[#opportunity-lifecycle]] for details.

      <tr>
        <td><dfn>specVersion</dfn>
        <td>String
        <td>M
        <td>
              The version of the IDX Protocol specification that the opportunity data conforms to.

              The value of this property MUST be the version of the IDX Protocol specification that the opportunity data conforms to.

              Example value for the version 0.0.1 of the IDX Protocol specification:
              <div class=example>`0.0.1`</div>

      <tr>
        <td><dfn>createdAt</dfn>
        <td>String
        <td>M
        <td>
              The timestamp of the creation of the opportunity.

              The value MUST be date and time string conforming to ISO 8601 with timezone UTC.

              Example value for Feb 12, 2025 at 12:00:00 UTC:
              <div class=example>`2025-02-12T12:00:00Z`</div>

      <tr>
        <td><dfn>status</dfn>
        <td>String
        <td>M
        <td>
              The status of the opportunity which must be one of the following values:

              : `active`
              :: For an opportunity that is still open for investment(s).

              : `closed`
              ::
                  For an opportunity that is no longer active.
                  For instance if it was updated with newer or different data,
                  if the opportunity was fully funded, or if the opportunity was withdrawn,
                  or other cases not yet disclosed here.

      <tr>
        <td><dfn>companyName</dfn>
        <td>String
        <td>M
        <td>
              Name of the entity related to the opportunity.

      <tr>
        <td><dfn>email</dfn>
        <td>String
        <td>M
        <td>
              Email address to contact the entity on matters relting to this opportunity.

      <tr>
        <td><dfn>city</dfn>
        <td>String
        <td>M
        <td>
              Name of the city of the entity.

      <tr>
        <td><dfn>zipCode</dfn>
        <td>String
        <td>O
        <td>
              The OPTIONAL ZIP code, postal code, or equivalent of the entity related to this opportunity.

      <tr>
        <td><dfn>country</dfn>
        <td>String
        <td>M
        <td>
              The ISO 3166-2 alpha-2 country code. Example value referring to France:

              <div class=example>`FR`</div>

      <tr>
        <td><dfn>websiteUrl</dfn>
        <td>String
        <td>O
        <td>
              The OPTIONAL URL of the company's website.

              <div class=example>`https://www.my-sustainable-company.com`</div>


      <tr>
        <td><dfn>businessSummary</dfn>
        <td>String
        <td>O
        <td>
              The OPTIONAL free-form text describing the company.

      <tr>
        <td><dfn>fundingAsk</dfn> : Number
        <td>String
        <td>M
        <td>
              The positive amount of funding requested by the company, encoded as a String.

              Example: investment ask of 1,230,000 USD is encoded as the following String value:
              <div class=example>`1230000`</div>

      <tr>
        <td><dfn>fundingCurrency</dfn>
        <td>String
        <td>M
        <td>
              The ISO 4217 currency code relating to the <{Opportunity/fundingAsk}>.

              Example value for the currency Australian dollar:
              <div class=example>`AUD`</div>

      <tr>
        <td><dfn>fundingBeneficiaries</dfn>
        <td>String
        <td>O
        <td>
              The OPTIONAL free-form text describing the ultimate benificiaries of the funding, if different from the entity representing the Opportunity (identified in <{Opportunity/companyName}>).

      <tr>
        <td><dfn>sdgAlignments</dfn>
        <td>Number[]
        <td>O
        <td>
              The OPTIONAL non-empty set of SDG alignment numbers.

              Each entry of the set MUST be a positive integer between `1` and `17`.

              Example: SDG alignment with goals 1, 5, and 13 is encoded as the following array:
              <div class=example>`[1, 5, 13]`</div>

      <tr>
        <td><dfn>previousInvestors</dfn> : <{PreviousInvestor}>[]
        <td>
        <td>O
        <td>The OPTIONAL non-empty set of unique (i.e. no duplicates) previous investors relating to this company or opportunity in principle.

      <tr>
        <td><dfn>incomes</dfn> : <{Income}>[]
        <td>
        <td>O
        <td>The OPTIONAL non-empty set of unique (i.e. no duplicates) incomes relating to this company or opportunity in principle.

      <tr>
        <td><dfn>costStructure</dfn> : <{CostStructure}>
        <td>
        <td>O
        <td>The OPTIONAL cost structure relating to the entities represented by the opportunity.

      <tr>
        <td><dfn>sustainableFarmingPractices</dfn> : <{SustainableFarmingPractices}>
        <td>
        <td>O
        <td>The OPTIONAL sustainable farming practices relating to the entities represented by the opportunity.

    </table>
    <figcaption>Opportunity data type properties</figcaption>
</figure>


### Opportunity Lifecycle ### {#opportunity-lifecycle}

[=Host systems=] SHOULD provide a mechanism to handle the lifecycle of an <{Opportunity}>, the life cycle being:

1. **Creation**: An <{Opportunity}> is created by a party and enters the host system subsequently.
2. **Update**: An <{Opportunity}> can be updated by the party that created it later on. In this case, the host system SHOULD
    1. Mark the previous version of the <{Opportunity}> as `closed` and
    2. Create a new <{Opportunity}> with the updated data, linking the new <{Opportunity}> to the previous one through the
        <{Opportunity/previousIds}> property.
3. **Closing**: An <{Opportunity}> can be closed by the party that created it. In this case, the host system SHOULD:
    1. Mark the <{Opportunity}> as `closed` and
    2. Update the <{Opportunity}> with the closing date.

    Note:
        Closing does *not* imply success in any way but rather that other parties should no longer consider the <{Opportunity}> (as identified by its <{Opportunity/id}>) for investment.

Upon each change to <{Opportunity}> data (creation, update, or closing), the
host system SHOULD provide the new version of the <{Opportunity}> to the [=data recipient=](s) through the IDX Protocol.


## Additional Utility Data Types ## {#dt-utility-section}

### Data Type PreviousInvestor ### {#dt-previous-investor}

The <dfn element>PreviousInvestor</dfn> data type contains information relating to a previous investor to a previous investment <{Opportunity}>.

The <{PreviousInvestor}> data type has the following properties:

<figure id="previousinvestor-properties-table" dfn-type="element-attr" dfn-for="PreviousInvestor">
  <table class="data">
    <thead>
      <tr>
        <th>Property
        <th>Type
        <th>Req
        <th>Specification
    <tbody>
      <tr>
        <td><dfn>name</dfn>
        <td>String
        <td>M
        <td>
              The name of the previous investor.

      <tr>
        <td><dfn>email</dfn>
        <td>String
        <td>M
        <td>
              The email address of the previous investor.

      <tr>
        <td><dfn>investmentAmount</dfn> : Number
        <td>String
        <td>O
        <td>
              The amount invested by the previous investor encoded as a String.

              See <{Opportunity/fundingAsk}> for an example of how to encode a number as a String.

              If this value is defined, <{PreviousInvestor/investmentCurrency}> MUST be defined as well.

      <tr>
        <td><dfn>investmentCurrency</dfn>
        <td>String
        <td>O
        <td>
              The ISO 4217 currency code relating to the <{PreviousInvestor/investmentAmount}>.

      <tr>
        <td><dfn>investmentDate</dfn>
        <td>String
        <td>M
        <td>
              The ISO 8601 date of the previous investment.

              Each <{PreviousInvestor/investmentDate}> MUST include year, OPTIONALLY followed by a dash and month and then OPTIONALLY followed by a dash and day.

              For the investment date being January 28, 2025, the value is:
              <div class=example>`2025-01-28`</div>

              For an investment date being January 2025, the value is:
              <div class=example>`2025-01`</div>

  </table>
  <figcaption>PreviousInvestor data type properties</figcaption>
</figure>

### Data Type Income ### {#dt-income}

The <dfn element>Income</dfn> data type contains information relating to the income of a party directly or indirectly represented by an <{Opportunity}>.

The <{Income}> data type has the following properties:

<figure id="income-properties-table" dfn-type="element-attr" dfn-for="Income">
  <table class="data">
    <thead>
      <tr>
        <th>Property
        <th>Type
        <th>Req
        <th>Specification
    <tbody>
      <tr>
        <td><dfn>amount</dfn> : Number
        <td>String
        <td>M
        <td>
              The amount of income encoded as a String.

              See <{Opportunity/fundingAsk}> for an example of how to encode a number as a String.

      <tr>
        <td><dfn>currency</dfn>
        <td>String
        <td>M
        <td>
              The ISO 4217 currency code relating to the <{Income/amount}>.


      <tr>
        <td><dfn>kind</dfn>
        <td>String
        <td>M
        <td>
              The kind of this income.

              Currently, <{Income/kind}> MUST equal one of following values:

              : `SustainableFarming`
              :: The income generated from sustainable farming practices.

              : `CarbonCredits`
              :: The income generated from sustainable farming practices.

              : `BiodiversityCredits`
              :: The income generated from biodiversity credits

              : `Premiums`
              :: The income generated from premiums for sustainable farming practices.

              Issue: This property is yet critically underdefined for all of above items of the enumeration.

      <tr>
        <td><dfn>date</dfn>
        <td>String
        <td>M
        <td>
              The ISO 8601 date of the income.

              Each <{Income/date}> MUST include year, OPTIONALLY followed by a dash and month and then OPTIONALLY followed by a dash and day.

              Yearly resolution is RECOMMENDED.

              See <{PreviousInvestor/investmentDate}> for encoding examples.

  </table>
  <figcaption>Income data type properties</figcaption>
</figure>


### Data Type Cost Structure ### {#dt-cost-structure}

The <dfn element>CostStructure</dfn> data type contains information relating to the cost structure of the party directly or the parties indirectly represented by an <{Opportunity}>.

The <{CostStructure}> data type has the following properties:

<figure id="coststructure-properties-table" dfn-type="element-attr" dfn-for="CostStructure">
  <table class="data">
    <thead>
      <tr>
        <th>Property
        <th>Type
        <th>Req
        <th>Specification
    <tbody>
      <tr>
        <td><dfn>currency</dfn>
        <td>String
        <td>M
        <td>
              The ISO 4217 currency code relating to the costs disclosed in the <{CostStructure}>.

      <tr>
        <td><dfn>totalCosts</dfn> : Number
        <td>String
        <td>O
        <td>
              The total costs incurred by the party or parties encoded as a String.

              If defined, the the total costs CAN be bigger than the sum of the other cost fields.

      <tr>
        <td><dfn>productionCosts</dfn> : Number
        <td>String
        <td>O
        <td>
              The total production costs encoded as a String.

      <tr>
        <td><dfn>laborCosts</dfn> : Number
        <td>String
        <td>O
        <td>
              The total labor and labor sourcing costs encoded as a String.


      <tr>
        <td><dfn>inputCosts</dfn> : Number
        <td>String
        <td>O
        <td>
              The total input costs encoded as a String. Example categories of input costs include seeds, fertilizers, chemicals, etc.


      <tr>
        <td><dfn>operatingCosts</dfn> : Number
        <td>String
        <td>O
        <td>
              The total operating costs encoded as a String. Example categories of operatings costs include cost of water, land, equipment running costs, etc.

  </table>
  <figcaption>CostStructure data type properties</figcaption>
</figure>



### Data Type SustainableFarmingPractices ### {#dt-sfp}

The <dfn element>SustainableFarmingPractices</dfn> data type contains information relating to the sustainable farming practices
of the party directly or the parties indirectly represented by an <{Opportunity}>.

The <{SustainableFarmingPractices}> data type has the following properties:

<figure id="sustainablefarmingpractices-properties-table" dfn-type="element-attr" dfn-for="SustainableFarmingPractices">
  <table class="data">
    <thead>
      <tr>
        <th>Property
        <th>Type
        <th>Req
        <th>Specification
    <tbody>
      <tr>
        <td><dfn>soilManagement</dfn>
        <td>String[]
        <td>O
        <td>
              The OPTIONAL non-empty set of soil management practices relating to the <{Opportunity}>.

              Each entry of the set MUST be one of the following values:

              : `CoverCrops`
              ::
                  Practices related to cover crops, green manure integration, living mulch systems, etc.
              : `WeedManagement`
              ::
                  Practices related to integrated weed biocontrol, mechanical weed suppression,
                  ecological weed management systems, etc.
              : `SoilFertility`
              ::
                  Practices related to soil fertility, building fertility in depth
              : `HumusOptimization`
              ::
                  Practices related to carbon sequestration, optimizing the humus content in the soil,
                  biomess incorporation systems, etc.

              Advisement: above list is incomplete and is subject to change and additions in subsequent versions.

              Note: This category is not mutuallly exclusive with other properies of <{SustainableFarmingPractices}>
                     such as <{SustainableFarmingPractices/biodiversityPractices}>.

      <tr>
        <td><dfn>biodiversityPractices</dfn>
        <td>String[]
        <td>O
        <td>
              The OPTIONAL non-empty set of biodiversity practices relating to the <{Opportunity}>.

              Each entry of the set MUST be one of the following values:

              : `EfficientAgrochemicalsUse`
              :: The practice of using agrochemicals efficiently and in a targeted manner.

              : `PreservationAreas`
              :: The practice of creating and maintaining connected wildlife passages and buffer zones
                  between agricultural areas.

              : `Polyculture`
              :: The practice of intercropping, succession planting, forest gardening systems, etc.

              Advisement: above list is incomplete and is subject to change and additions in subsequent versions.

      <tr>
        <td><dfn>waterManagement</dfn>
        <td>String[]
        <td>O
        <td>
              The OPTIONAL non-empty set of water management practices relating to the <{Opportunity}>.

              Each entry of the set MUST be one of the following values:

              : `SoilWaterConservation`
              ::
                  The practice of maximize water retention in the soil and reducing evaporation.
                  This practice also includes the use of mulching, terracing,
                  cover cropping (see <{SustainableFarmingPractices/soilManagement}>), etc.

              : `RainwaterHarvesting`
              :: The practice of collecting and storing rainwater for irrigation and other uses.

              : `PrecisionIrrigation`
              ::
                  The practice of efficient irrigation technologies and scheduling based on actual crop water needs.
                  This includes drip irrigation among other techniques.

              : `WaterReuse`
              ::
                  The practice of reusing water for irrigation and other uses.

              : `WaterQualityManagement`
              ::
                  Practices to prevent water contamination and to maintain water quality,
                  such as buffer strips along waterways, proper nutrient management,
                  integrated pest management, etc.

              Advisement: above list is incomplete and is subject to change and additions in subsequent versions.

  </table>
  <figcaption>SustainableFarmingPractices data type properties</figcaption>
</figure>

# IDX Protocol # {#protocol}

This section defines an [[!rfc9112|HTTP]]-based API for the [=interoperable=] exchange of
<{Opportunity}> data between [=host systems=].

Note: The scope of the HTTP API is minimal by design. Additional features will be added in future versions of this specification.

Interoperable data exchange between a data owner and a data recipient can be achieved by

1. the data owner offering <{Opportunity}> data through a host system that implements the IDX
    Protocol, and
2. the data recipient making [=Authentication Flow|authenticated calls=] to retrieve <{Opportunity}> data,
    i.e., by calling the [=Action OpportunityExchange=].

## Host system Minimum Requirements ## {#requirements}

A [=host system=] MUST offer a [=OpenId Provider Configuration Document=] as further specified in [[#auth-discovery]].

A [=host system=] MUST implement the [=Authentication Flow=] and [=Action OpportunityExchange=].

A [=host system=] MUST offer its actions under https method only.

A [=host system=] MUST offer all actions under the same [=Hostname=] and [=Subpath=] except for the
[=AuthEndpoint=] returned in the `token_endpoint` of the [=OpenId Provider Configuration Document=]
(see [=Authentication Flow=]).

## <dfn>Authentication Flow</dfn> ## {#auth-flow}

A [=host system=] MUST require a [=data recipient=] to first authenticate before calling
other endpoints such as [=Action OpportunityExchange=].

The authentication flow consists of two steps:
1. Discovery of the host system's authentication endpoint (see [[#auth-discovery]].
2. Acquiring a bearer token through [=Action Authenticate=] (see [[#action-auth]]).

### Authentication Endpoint Discovery ### {#auth-discovery}

A [=party=] discovers the value of the [=AuthEndpoint=] by

1. performing a `GET` request to a [=host system's=] [=OpenId Provider Configuration Document=],
    using `[Hostname]/.well-known/openid-configuration`.
    1. the returned document MUST define the `token_endpoint` property accordingly.
1. using the value of `token_endpoint` as the [=AuthEndpoint=]


### Action Authenticate ### {#action-auth}

The <dfn>Action Authenticate</dfn> is an HTTP endpoint.
It MUST return bearer tokens using client credentials in conformance with [[!rfc6749]] Section 4.4 (OAuth2 Client Credentials).

[=Host systems=] MAY offer this action under potentially any path and hostname,
provided that this is discoverable as specified in [[#auth-discovery]].

See [[#example-auth]] for an example request and response.

#### Request Syntax #### {#action-auth-request}

<pre highlight=http>
  POST <l>[=AuthEndpoint=]</l> HTTP/1.1
  accept: application/json
  content-type: application/x-www-form-urlencoded
  authorization: Basic <l>[=BasicAuth=]</l>
  content-length: <l>[=ContentLength=]</l>
  <l>[=AuthBody=]</l>
</pre>

With Request parameters:

: <dfn>BasicAuth</dfn>
:: See [[!rfc6749]] Section 4.4.2

: <dfn>AuthBody</dfn>
:: See [[!rfc6749]] Section 4.4

: <dfn>ContentLength</dfn>
:: The length of the Body. See [[!rfc9112]].

#### Response Syntax #### {#action-auth-response}

<pre highlight=http>
  HTTP/1.1 <l>[=AuthStatusCode=]</l> OK
  content-type: application/json
  content-length: <l>[=ContentLength=]</l>

  <l>[=AuthResponseBody=]</l>
</pre>

With action-specific response parameters

: <dfn>AuthStatusCode</dfn>
:: A HTTP response code conforming to [[!rfc6749]] Section 4.4 and Section 5.

: <dfn>AuthResponseBody</dfn>
:: A JSON Object conforming to either [[!rfc6749]] Section 4.4 in case
    of successful authentication (containing an <dfn>access token</dfn>), or [[!rfc6749]] Section
    5.2 otherwise.

## <dfn>Action OpportunityExchange</dfn> ## {#action-oppex}

Lists the [=data owner=]'s <{Opportunity}> data incrementally (see [[#pagination]]).

A [=Host system=] SHOULD implement an access management system to return only the <{Opportunity}> data intended for the requesting [=data recipient=].

### Pagination ### {#pagination}

[=Host systems=] MUST implement pagination server-side such that

1. The host system MAY return less <{Opportunity|Opportunities}> than requested through the
    [=Limit=] request parameter
2. The host system MUST return a `Link` header if there are additional <{Opportunity|Opportunities}>
    ready to be retrieved, such that
   1. The `Link` header conforms to [[!rfc8288]]
   2. The value of the `rel` parameter is equal to `next`
   3. the target IRI (RFC8288, Section 3.1) of the `Link` header is absolute
   4. The value of `host` of the target IRI is equal to the value of the `host` request header from
      the original `OpportunityExchange` HTTP request

The target IRI from a pagination `link` header is called a <dfn>pagination link</dfn>.

Upon a [=host system=] returning a [=pagination link=]

1. a data recipient CAN call the pagination link more than once
2. upon each call, the host system
    1. MUST return the same set of <{Opportunity|Opportunities}> upon successful authentication
        (i.e. [=BearerToken=] authentication)
    2. MUST NOT return more <{Opportunity|Opportunities}> than requested in case [=Limit=] was
        defined by a [=data recipient=]
    3. MUST return a `Link` header conforming with the previous description in case additional
        <{Opportunity|Opportunities}> are available
3. If a response contains a second pagination link, upon calling the second pagination link, the
    previous pagination link MAY no longer work
    - i.e. data recipients MUST NOT assume that previous pagination links continue to return results
        after advancing in the pagination process
4. a pagination link MUST be valid for at least 180 seconds after creation
5. a data recipient SHOULD retry calling the pagination link after the server returned an error
   1. and SHOULD use a randomized exponential back-off strategy when retrying

### Request Syntax ### {#action-tad-request}

<pre highlight=http>
GET <l>[=Subpath=]</l>/1/opportunities?<l>[=Limit=]</l> HTTP/1.1
host: <l>[=Hostname=]</l>
authorization: Bearer <l>[=BearerToken=]</l>
</pre>

: <dfn>Subpath</dfn>
:: If a host system uses a relative subpath, then the requesting data recipient MUST prepend this subpath.

: <dfn>Hostname</dfn>
:: The requesting data recipient MUST use the domain name of the host system.

: <dfn>BearerToken</dfn>
:: Bearer token (see [[!rfc6750]]).

: <dfn>Limit</dfn>
::
    `Limit` is an OPTIONAL request parameter. If defined,
      1. the name of the HTTP request parameter MUST be `limit`
      2. and the value MUST be a positive integer.

### Response Syntax ### {#action-tad-response}

Response without a `link` header:

<pre highlight=http>
  HTTP/1.1 <l>[=StatusCode=]</l> <l>[=StatusText=]</l>
  content-type: application/json
  content-length: <l>[=ContentLength=]</l>

  <l>[=ResponseBody=]</l>
</pre>

Paginated response with a `link` header:

<pre highlight=http>
  HTTP/1.1 <l>[=StatusCode=]</l> <l>[=StatusText=]</l>
  content-type: application/json
  content-length: <l>[=ContentLength=]</l>
  link: <l>[=PaginationLink=]</l>; rel="next"

  <l>[=ResponseBody=]</l>
</pre>

With response parameters

: <dfn>StatusCode</dfn>
::
    If the host system returns opportunity data, the `HttpStatusCode` MUST be 200.

    Otherwise, the host system MUST return the appropriate HTTP error code.

: <dfn>StatusText</dfn>
::
    The HTTP Status text conforming to the HTTP status code [=StatusCode=].

: <dfn>ResponseBody</dfn>
::
    If the host system accepts the [=BearerToken=], the body MUST be a JSON object with property `data` with value a JSON array of <{Opportunity|Opportunities}>.

    Otherwise, the host system MUST return an error response JSON object with the following properties:
    - `code`: the error response code (corresponding to the [=StatusCode=]) encoded as a String;
    - `message`: a human-readable error description encoded as a String.

: <dfn>PaginationLink</dfn>
:: See [=pagination link=] and [[#pagination]].

## Examples ## {#examples}

### Example Action Authenticate request and response ### {#example-auth}

**Example Request**

<div class=example>
  <pre highlight=http>
    POST /auth HTTP/1.1
    accept: application/json
    content-type: application/x-www-form-urlencoded
    authorization: Basic [base64(client_id:client_secret)]
    grant-type: client_credentials
  </pre>
</div>

**Example Successful Response**
<div class=example>
  <pre highlight=json>
    {
      "access_token": "...",
      "token_type": "bearer"
    }
  </pre>
</div>

**Example Error Response (Invalid Client)**

<div class=example>
  <pre highlight=http>
    HTTP/1.1 400 Bad Request
    date: Wed, 29 Jan 2025 19:33:16 GMT
    content-type: application/json
  </pre>
  <pre highlight=json>
    {
      "error": "invalid_client",
      "error_description": "Authentication failed"
    }
  </pre>
</div>

### Example Action OpportunityExchange request and response ### {#example-oppex}

**Example Request**

<div class=example>
  <pre highlight=http>
    GET /1/opportunities?limit=1 HTTP/1.1
    host: example.com
    authorization: Bearer [access_token]
  </pre>
</div>

**Example Successful Response**

<div class=example>
  Example header:
  <pre highlight=http>
    HTTP/1.1 200 OK
    content-type: application/json
    content-length: 661
    server: example-server
    link: &lt;https://api.example./1/opportunities?limit=1&amp;offset=1&gt;; rel="next"
  </pre>

  Example body:
  <pre highlight=json>
    {
      "data": [
        {
          "id": "123e4567-e89b-12d3-a456-426614174002",
          "specVersion": "0.0.1",
          "createdAt": "2025-01-28T12:00:00Z",
          "status": "active",
          "previousIds": [ "123e4567-e89b-12d3-a456-426614174000", "123e4567-e89b-12d3-a456-426614174001" ],
          "companyName": "Example Company",
          "email": "example@company.com",
          "city": "Berlin",
          "country": "DE",
          "websiteUrl": "https://example.com",
          "businessSummary": "Example business summary",
          "fundingAsk": "1230000",
          "fundingCurrency": "EUR",
          "previousInvestors": [
            {
              "name": "Example Investor",
              "email": "example@investor.com",
              "investmentDate": "2025-01-28"
            }
          ],
          "incomes": [
            {
              "amount": "1230000",
              "currency": "EUR",
              "kind": "SustainableFarming",
              "date": "2025-01-28"
            }
          ],
          "costStructure": {
            "currency": "EUR",
            "totalCosts": "1230000",
          },
          "sustainableFarmingPractices": {
            "soilManagement": ["CoverCrops"],
            "biodiversityPractices": ["EfficientAgrochemicalsUse"],
            "waterManagement": ["SoilWaterConservation"]
          }
        }
      ]
    }
  </pre>
</div>

**Example Error Response (Invalid Token)**

<div class=example>
  <pre highlight=http>
    HTTP/1.1 401 Unauthorized
    content-type: application/json
    content-length: 29
  </pre>
  <pre highlight=json>
    {
      "code": "Unauthorized",
      "message": "Invalid token"
    }
  </pre>
</div>

# Appendix A: Changelog # {#changelog}

## Version 0.0.1-20250219 (2025-02-19) ## {#version-0-0-1-20250219}

Summary:

- addition of Opportunity lifecycle definitions. Specifically
    - addition of properties <{Opportunity/id}>, <{Opportunity/previousIds}>, <{Opportunity/specVersion}>, <{Opportunity/createdAt}>, <{Opportunity/status}>
    - addition of chapter [[#opportunity-lifecycle]]


## Version 0.0.1-20250128 (2025-01-28) ## {#version-0-0-1-20250128}

Summary: Initial release of the specification.


# Appendix B: Conformance Testing # {#appendix-b}

Advisement: This appendix is a work in progress. All feedback is welcome.


<dfn>Conformance Testing</dfn> is an interoperabilty testing process, performed by executing and passing test cases ([[#test-matrix]]).

The goal of this process is to assess the interoperability between [=host systems=], and to which extend an individual host system implements this specification.

The process is structured by a set of test cases ([[#test-cases]]), with categories [=Mandatory Tests=] and [=Recommended Tests=] (also see [[#test-matrix]]).

Within the process, host systems have different roles:
  1. the [=host system=] executing tests, which in this role is called the <dfn>tester host system</dfn>,
  2. the [=host system=] under test, which in this role is called the <dfn>target host system</dfn>.

A [=target host system=] has successfully passed the [=Conformance Testing=] if it passed all [=Mandatory Tests=].

Note:
  It is recommended to perform the [=Conformance Testing=] process as a bilateral testing process, wherein two parties mutually test
  each other's [=host systems=] as a [=target host system=] and a [=tester host system=]:

Note: It is RECOMMENDED for the parties to also test and document the results from running [=Recommended Tests=].


## Test Matrix ## {#test-matrix}

<figure id="pilot-testing-test-matrix-table">
  <table class="data">
    <thead>
      <tr>
        <th>Categorization
        <th>Tests
    <tbody>
      <tr>
        <td><dfn>Mandatory Tests</dfn>
        <td>
            [[#tc-001]]<br/>[[#tc-002]]<br/>[[#tc-005]]

      <tr>
        <td><dfn>Recommended Tests</dfn>
        <td>
            [[#tc-003]]<br/>[[#tc-004]]<br/>[[#tc-006]]<br/>
            [[#tc-007]]<br/>[[#tc-008]]<br/>[[#tc-009]]<br/>
            [[#tc-010]]

  </table>
  <figcaption>Pilot Testing Test Matrix</figcaption>
</figure>


## Test Cases ## {#test-cases}

Although both [=host systems=] are tested in bilateral testing, only one of them is the target of
the tests at each time.

Bilateral testing MUST include the following tests (and MAY include additional tests):

### Test Case 001: AuthEndpoint Discovery ### {#tc-001}

Tests the target host system's ability to have a discoverable [=AuthEndpoint=].

#### Request #### {#tc-001-request}

A GET request must be sent to the target host system's `[Hostname]/.well-known/openid-configuration`
endpoint.

#### Expected Response #### {#tc-001-response}

A valid [=OpenId Provider Configuration Document=] (conforming to [[!OPENID-CONNECT]] Section 4)
MUST be returned. The value of the `token_endpoint` property MUST be a valid URL, offering [=Action
Authenticate=].

### Test Case 002: Successful Authentication ### {#tc-002}

Tests the target host system's ability to [=Action Authenticate|authenticate=] a data recipient.

#### Request #### {#tc-002-request}

A POST request must be sent to the target host system's [=AuthEndpoint=] with valid credentials as
per the syntax specified in [[#action-auth-request]].

#### Expected Response #### {#tc-002-response}

The target host system MUST respond with [=StatusCode=] `200 OK` and a JSON body containing the
access token, as specified in [[#action-auth-response]].

### Test Case 003: Authentication with Invalid Credentials ### {#tc-003}

Tests the target host system's ability to handle invalid credentials during authentication.

#### Request #### {#tc-003-request}

A POST request must be sent to the target host system's [=AuthEndpoint=] with invalid credentials as
per the syntax specified in [[#action-auth-request]].

#### Expected Response #### {#tc-003-response}

The target host system MUST respond with an error response, as specified in
[[#action-auth-response]].

The [=StatusCode=] SHOULD be `401 Unauthorized` and the `code` property SHOULD be `Unauthorized`. The
`message` property CAN be any human-readable error message (e.g., "Invalid credentials").

### Test Case 004: Malformed Authentication Request ### {#tc-004}

Tests the target host system's ability to handle malformed authentication requests.

#### Request #### {#tc-004-request}

A POST request must be sent to the target host system's [=AuthEndpoint=] with a malformed request
(e.g., missing `grant-type`).

#### Expected Response #### {#tc-004-response}

The target host system MUST respond with an error response, as specified in
[[#action-auth-response]].

The [=StatusCode=] SHOULD be `400 BadRequest` and the `code` property SHOULD be `BadRequest`. The
`message` property CAN be any human-readable error message (e.g., "Malformed request").

### Test Case 005: Action OpportunityExchange without Limit ### {#tc-005}

Tests the target host system's ability to return <{Opportunity}> data without a [=Limit=].

#### Request #### {#tc-005-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint without
a `limit` parameter.

#### Expected Response #### {#tc-005-response}

The target host system MUST respond with [=StatusCode=] `200 OK` and a valid JSON body containing
the <{Opportunity}> data, as specified in [[#action-tad-response]]. The `Link` header MAY be
present.

### Test Case 006: Action OpportunityExchange Pagination ### {#tc-006}

Tests the target host system's ability to paginate <{Opportunity}> data.

#### Request #### {#tc-006-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint with a
`limit` parameter, requesting less <{Opportunity}> data than available.

#### Expected Response #### {#tc-006-response}

The target host system MUST respond with [=StatusCode=] `200 OK` and a valid JSON body containing a
subset of the <{Opportunity}> data available, as specified in [[#action-tad-response]]. The `Link`
header MUST be present and conform to the pagination rules specified in [[#pagination]].

Upon calling the pagination link, the target host system MUST return the next subset of the
<{Opportunity}> data available. Upon calling the same link again, the target host system MUST return
the same subset of <{Opportunity}> data.

### Test Case 007: Action OpportunityExchange with Malformed Limit ### {#tc-007}

Tests the target host system's ability to handle a malformed `limit` parameter.

#### Request #### {#tc-007-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint with a
malformed `limit` parameter (e.g., the value is not a positive integer or `limit` is misspelled).

#### Expected Response #### {#tc-007-response}

The target host system MUST respond with an error response, as specified in
[[#action-tad-response]]. The [=StatusCode=] SHOULD be `400 BadRequest` and the `code` property
SHOULD be `BadRequest`. The `message` property CAN be any human-readable error message (e.g.,
"Malformed limit parameter").

### Test Case 008: Action OpportunityExchange with Invalid Token ### {#tc-008}

Tests the target host system's ability to handle an invalid access token.

#### Request #### {#tc-008-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint with an
invalid access token.

#### Expected Response #### {#tc-008-response}

The target host system MUST respond with an error response, as specified in
[[#action-tad-response]]. The [=StatusCode=] SHOULD be `401 Unauthorized` and the `code` property
SHOULD be `Unauthorized`. The `message` property CAN be any human-readable error message (e.g.,
"Invalid token").

### Test Case 009: Action OpportunityExchange with Expired Token ### {#tc-009}

Tests the target host system's ability to handle an expired access token.

#### Request #### {#tc-009-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint with an
expired access token.

#### Expected Response #### {#tc-009-response}

The target host system MUST respond with an error response, as specified in
[[#action-tad-response]]. The [=StatusCode=] SHOULD be `401 Unauthorized` and the `code` property
SHOULD be `Unauthorized`. The `message` property CAN be any human-readable error message (e.g.,
"Expired token").

### Test Case 010: Malformed OpportunityExchange Request ### {#tc-010}

Tests the target host system's ability to handle malformed requests to the `[Subpath]/1/opportunities`.

#### Request #### {#tc-010-request}

A GET request must be sent to the target host system's `[Subpath]/1/opportunities` endpoint with a
malformed request (e.g., missing `authorization` header).

#### Expected Response #### {#tc-010-response}

The target host system MUST respond with an error response, as specified in
[[#action-tad-response]]. The [=StatusCode=] SHOULD be `400 BadRequest` and the `code` property
SHOULD be `BadRequest`. The `message` property CAN be any human-readable error message (e.g.,
"Malformed request").

## Test Result Communications ## {#test-output}

It is recommended to send the [=conformance testing=] results to [idx-interop-testing@sine.dev](mailto:idx-interop-testing@sine.dev).


<pre class=biblio>
{
    "OPENID-CONNECT": {
      "authors": [],
      "href": "https://openid.net/specs/openid-connect-discovery-1_0.html",
      "title": "OpenID Connect Discovery 1.0 incorporating errata set 1"
    },
    "rfc9562" : {
      "authors": ["Davis, K.", "Peabody, B.", "Leach, P."],
      "href": "https://www.rfc-editor.org/rfc/rfc9562.html",
      "title": "Universally Unique IDentifiers (UUIDs)"
    }
}
</pre>
